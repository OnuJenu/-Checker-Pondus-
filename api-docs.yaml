openapi: 3.0.0
info:
  title: Mobile Voting Platform Backend API
  version: 1.0.0
  description: A RESTful API for a mobile voting platform where users can create and participate in polls with two options, supporting text, video, audio, or image formats.

servers:
  - url: http://localhost:5000/api/v1
    description: Local server

paths:
  /auth/login:
    post:
      summary: Authenticate user via OAuth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  example: google
                oauth_token:
                  type: string
                  example: "ABC123..."
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
        '400':
          description: Invalid OAuth provider or token

  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                email:
                  type: string
                  example: johndoe@example.com
                password:
                  type: string
                  format: password
                  example: securepassword123
      responses:
        '201':
          description: User created successfully
        '400':
          description: Username or email already exists

  /polls:
    get:
      summary: Get a list of polls
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [active, closed]
          description: Filter polls by their status.
      responses:
        '200':
          description: A list of polls
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Poll'

    post:
      summary: Create a new poll
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                question:
                  type: string
                  example: "Which color dress is better?"
                option1:
                  type: string
                  example: "Red"
                option2:
                  type: string
                  example: "Blue"
                media_file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Poll created successfully
        '400':
          description: Invalid request data

  /polls/{poll_id}/vote:
    post:
      summary: Vote on a poll
      parameters:
        - in: path
          name: poll_id
          required: true
          schema:
            type: integer
            example: 123
          description: ID of the poll to vote on.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                option:
                  type: string
                  example: "Red"
      responses:
        '200':
          description: Vote recorded successfully
        '400':
          description: Invalid vote or poll not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
    Poll:
      type: object
      properties:
        id:
          type: integer
        question:
          type: string
        option1:
          type: string
        option2:
          type: string
        status:
          type: string
          enum: [active, closed]
        media_url:
          type: string